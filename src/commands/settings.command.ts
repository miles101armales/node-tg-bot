import { Context, Markup, Telegraf } from 'telegraf';
import { Command } from './command.class';
import { IBotContext } from '../context/context.interface';

export class SettingsCommand extends Command {
	constructor(bot: Telegraf<IBotContext>) {
		super(bot);
	}

	handle(): void {
		this.bot.command('settings', (ctx) => this.email(ctx));
		this.bot.action('settings', (ctx) => this.email(ctx));
	}

	email(ctx: IBotContext): void {
		try {
			if(ctx.session.email) {
				ctx.editMessageText('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–≥—Ä—É–∑–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!', Markup.inlineKeyboard([
					Markup.button.callback('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'start')
				]));
			} else {
				ctx.reply(`–ö–∞–∂–µ—Ç—Å—è, –≤—ã —É –Ω–∞—Å –≤–ø–µ—Ä–≤—ã–µ! üòÖ\n\n–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–∫—Ä–µ–ø–∏—Ç—å –ø–æ—á—Ç—É –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ–∑–¥–∞–Ω–Ω—ã–º —Ç–∞–±–ª–∏—Ü–∞–º. üòä\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É‚¨áÔ∏è`, 
						{
							reply_markup: {
								inline_keyboard: [
									[ { text: 'üì• –ó–∞–∫—Ä–µ–ø–∏—Ç—å –ø–æ—á—Ç—É', callback_data: 'email' } ]
								]
							}
						})
			}

			this.bot.action('start', (ctx) => {
				ctx.editMessageText(
					`–°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–º–∞–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∫–Ω–æ–ø–∫–µ "–ú–µ–Ω—é"\n\n ‚¨áÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
					{
						reply_markup: {
							inline_keyboard: [
								[ { text: '‚ö° –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data: 'convert' }, { text: 'üß∑ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–≥—Ä—É–∑–∫–∏', callback_data: 'settings' } ],
								[ { text: 'üì• –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—á—Ç—É', callback_data: 'email' } ]
							]
						}
					}
				)
			} )			
		} catch (error) {
			throw new Error('–û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã settings');
		}
	}
}