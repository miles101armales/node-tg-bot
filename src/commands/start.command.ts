import { Markup, Telegraf } from 'telegraf';
import { IBotContext } from '../context/context.interface';
import { Command } from './command.class';

export class StartCommand extends Command {
	constructor(bot: Telegraf<IBotContext>) {
		super(bot);
	}
	handle(): void {
		try {
			this.bot.start((ctx) => {
				try {
					if(ctx.session.email) {
						ctx.reply(
							`‚ù§Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –±–æ—Ç-–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä CSV-—Ñ–∞–π–ª–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç Google-—Ç–∞–±–ª–∏—Ü.\n\n–°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–º–∞–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∫–Ω–æ–ø–∫–µ "–ú–µ–Ω—é"\n\n ‚¨áÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
							{
								reply_markup: {
									inline_keyboard: [
										[ { text: '‚ö° –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data: 'convert_inline' }, { text: 'üß∑ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–≥—Ä—É–∑–∫–∏', callback_data: 'settings_inline' } ],
										[ { text: 'üì• –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—á—Ç—É', callback_data: 'email_inline' } ]
									]
								}
							}
						)
					} else {
						ctx.reply(`–ö–∞–∂–µ—Ç—Å—è, –≤—ã —É –Ω–∞—Å –≤–ø–µ—Ä–≤—ã–µ! üòÖ\n\n–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–∫—Ä–µ–ø–∏—Ç—å –ø–æ—á—Ç—É –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ–∑–¥–∞–Ω–Ω—ã–º —Ç–∞–±–ª–∏—Ü–∞–º. üòä\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É‚¨áÔ∏è`, 
						{
							reply_markup: {
								inline_keyboard: [
									[ { text: 'üì• –ó–∞–∫—Ä–µ–ø–∏—Ç—å –ø–æ—á—Ç—É', callback_data: 'email_inline' } ]
								]
							}
						})
					}
				} catch (error) {
					this.bot.launch();
				}
			});
		} catch (error) {
			throw new Error('–û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã start');
		}
	}
}