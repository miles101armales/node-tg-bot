import {  Markup, Telegraf } from 'telegraf';
import { Command } from './command.class';
import { IBotContext } from '../context/context.interface';
import { GoogleApiService } from '../google-api/google-api.service';
import axios from 'axios';
import * as fs from 'fs';
import { CsvService } from '../csv/csv.service';
import { Bot } from '../app';

export class ConvertCommand extends Command {
	filesCount = 0; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤
	googleSheetService: GoogleApiService;
	csvService: CsvService;
	Bot: Bot;

	constructor(bot: Telegraf<IBotContext>) {
		super(bot);
		this.csvService = new CsvService();
		this.googleSheetService = new GoogleApiService();
	}

	handle(): void {
		this.bot.command('convert', (ctx) => {
			if(ctx.session.email) {
				ctx.reply(`–í—ã –ø–æ–ø–∞–ª–∏ –≤ –º–µ–Ω—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏.\n–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n` +  `üì• –í–∞—à–∞ –ø–æ—á—Ç–∞:\n‚Üí ${ctx.session.email}\n`+
				`#Ô∏è‚É£ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É:\n‚Üí ${ctx.session.convert_to}\n`+
				`#Ô∏è‚É£ –í—ã–±–æ—Ä–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏:\n‚Üí ${ctx.session.convert_settings}\n\n` +` –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:`, {
					reply_markup: {
						inline_keyboard: [
							[ { text: '#Ô∏è‚É£ –ù–∞—á–∞—Ç—å –≤—ã–≥—Ä—É–∑–∫—É', callback_data: 'convert_start' } ],
							[ { text: 'üÜï –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'settings_inline' } ],
							[ { text: '‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start_back' } ]
						]
					}
				});
			} else {
				ctx.reply(`–ö–∞–∂–µ—Ç—Å—è, –≤—ã —É –Ω–∞—Å –≤–ø–µ—Ä–≤—ã–µ! üòÖ\n\n–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ –Ω–µ–±–æ–ª—å—à—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—à–∏–º –±–æ—Ç–æ–º. üòä\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É‚¨áÔ∏è`, 
						{
							reply_markup: {
								inline_keyboard: [
									[ { text: 'üß© –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é', callback_data: 'auth_inline' } ]
								]
							}
						})
			}
			this.convertSettings(ctx);
		});
		this.bot.action('convert_inline', (ctx) => {
			if(ctx.session.email) {
				ctx.editMessageText(`–í—ã –ø–æ–ø–∞–ª–∏ –≤ –º–µ–Ω—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏.\n–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n` +  `üì• –í–∞—à–∞ –ø–æ—á—Ç–∞:\n‚Üí ${ctx.session.email}\n`+
				`#Ô∏è‚É£ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É:\n‚Üí ${ctx.session.convert_to}\n`+
				`#Ô∏è‚É£ –í—ã–±–æ—Ä–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏:\n‚Üí ${ctx.session.convert_settings}\n\n` +` –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:`, {
					reply_markup: {
						inline_keyboard: [
							[ { text: '#Ô∏è‚É£ –ù–∞—á–∞—Ç—å –≤—ã–≥—Ä—É–∑–∫—É', callback_data: 'convert_start' } ],
							[ { text: 'üÜï –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'settings_inline' } ],
							[ { text: '‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start_back' } ]
						]
					}
				});
			} else {
				ctx.reply(`–ö–∞–∂–µ—Ç—Å—è, –≤—ã —É –Ω–∞—Å –≤–ø–µ—Ä–≤—ã–µ! üòÖ\n\n–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ –Ω–µ–±–æ–ª—å—à—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—à–∏–º –±–æ—Ç–æ–º. üòä\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É‚¨áÔ∏è`, 
						{
							reply_markup: {
								inline_keyboard: [
									[ { text: 'üß© –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é', callback_data: 'auth_inline' } ]
								]
							}
						})
			}
			this.convertSettings(ctx);
		});
	}

	convertSettings(ctx: IBotContext): void {
		try {
				this.bot.action('convert_start', (ctx) => {
					ctx.editMessageText('–ß—Ç–æ –≤—ã–≥—Ä—É–∂–∞–µ–º?', {
						reply_markup: {
							inline_keyboard: [
								[ { text: '#Ô∏è‚É£ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', callback_data: 'users' } ],
								[ { text: 'üÜï –ó–∞–∫–∞–∑—ã', callback_data: 'orders' } ],
								[ { text: '‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start_back' } ]
							]
						}
					})
					this.bot.action('users', (ctx: IBotContext) => {
						ctx.session.convert_type = 'users';
						this.convertProcess(ctx);
					});
					this.bot.action('orders', (ctx: IBotContext) => {
						ctx.session.convert_type = 'orders';
						this.convertProcess(ctx);
					});
				})
		} catch (error) {
			throw new Error('–û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥—ã convert');
		}
	}

	convertProcess(ctx_1: IBotContext): void {
		ctx_1.editMessageText('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à —Ñ–∞–π–ª CSV')
		this.bot.on('document', async (ctx) => {
			try {
				this.filesCount++; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞

				const fileId = ctx.message.document.file_id;
				const fileLink = await ctx.telegram.getFileLink(fileId); // –ü–æ–ª—É—á–∞–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª
				const fileName = ctx.message.document.file_name;

				// –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª —Å –ø–æ–º–æ—â—å—é Axios
				const response = await axios.get(String(fileLink), { responseType: 'stream' });

				// –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –Ω–µ–≥–æ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ—Ç–æ–∫–∞
				const filePath = `downloads/${fileName}`;
				const writer = fs.createWriteStream(filePath);
				response.data.pipe(writer);
				
				// –û–±—Ä–∞–±–æ—Ç–∫–∞ CSV —Ñ–∞–π–ª–∞
				if (ctx.session.convert_type === 'users') {
					await this.csvService.readCsvUser(fileName as string);
				} else if (ctx.session.convert_type === 'orders') {

					await this.csvService.readCsvOrder(fileName as string);
				}
				
				// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞
				writer.on('finish', async () => {
					ctx.telegram.deleteMessage(ctx.chat.id, (ctx_1.msg.message_id))
					ctx.reply('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ ‚åõ')

					if(this.csvService.realArrOfObjects) {
						await this.googleSheetService.handleNewRequest(fileName as string, ctx.session.email, ctx.chat.id, this.csvService.realArrOfObjects)

						this.filesCount--; // –£–º–µ–Ω—å—à–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞

						// –ï—Å–ª–∏ –≤—Å–µ —Ñ–∞–π–ª—ã –±—ã–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
						if (this.filesCount === 0) {
							ctx.session.url_list = this.googleSheetService.spreadsheetUrl;
							this.csvService.deleteCsvFile(filePath);
							ctx.telegram.deleteMessage(ctx.chat.id, (ctx.msg.message_id + 1))
							if(this.googleSheetService.statusOfImport === false) {
								ctx.reply('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ü§®\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ üôè –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–∫–æ–π —Ç–∏–ø –≤—ã–≥—Ä—É–∑–∫–∏ –≤—ã –≤—ã–±–∏—Ä–∞–µ—Ç–µ –¥–ª—è —Ñ–∞–π–ª–∞.')
							} else {
								ctx.deleteMessage(ctx_1.message?.message_id);
								this.bot.telegram.sendMessage(ctx.chat.id, `–í–∞—à–∞ —Ç–∞–±–ª–∏—Ü–∞: ${ctx.session.url_list}`, Markup.inlineKeyboard([
									Markup.button.callback('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'start'),
								]))
							}
						}
					}
				});

				// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞
				writer.on('error', (error) => {
					console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞:', error);
					ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞.');

					this.filesCount--; // –£–º–µ–Ω—å—à–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
				});
			} catch (err) {
				ctx.reply('–î–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ /convert')
				this.Bot.restartBot();
			}
		});
	}
}